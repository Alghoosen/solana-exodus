//! @brief keccak permutation syscall tests

extern crate solana_program;
use {
    solana_program::{custom_heap_default, custom_panic_default, keccak_permutation::{keccak_permutation, KECCAK_F1600_STATE_WIDTH}},
};

const PERMUTATION_OF_ZERO_STATE: [u64; KECCAK_F1600_STATE_WIDTH] = [17376452488221285863, 9571781953733019530, 15391093639620504046, 13624874521033984333, 10027350355371872343, 18417369716475457492, 10448040663659726788, 10113917136857017974, 12479658147685402012, 3500241080921619556, 16959053435453822517, 12224711289652453635, 9342009439668884831, 4879704952849025062, 140226327413610143, 424854978622500449, 7259519967065370866, 7004910057750291985, 13293599522548616907, 10105770293752443592, 10668034807192757780, 1747952066141424100, 1654286879329379778, 8500057116360352059, 16929593379567477321];

#[no_mangle]
pub extern "C" fn entrypoint(_input: *mut u8) -> u64 {
    let mut state = [0u64; KECCAK_F1600_STATE_WIDTH];
    keccak_permutation(&mut state);
    assert_eq!(state, PERMUTATION_OF_ZERO_STATE);

    0
}

custom_heap_default!();
custom_panic_default!();