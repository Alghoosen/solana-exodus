#pragma once

/* Generated with cbindgen:0.23.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * The invoke context holds the state of a single transaction execution.
 * It tracks the execution progress (instruction being executed),
 * interfaces with account data,
 * and specifies the on-chain execution rules (precompiles, syscalls, sysvars).
 */
typedef struct sealevel_invoke_context sealevel_invoke_context;

/**
 * A virtual machine capable of executing Solana Sealevel programs.
 */
typedef struct sealevel_machine sealevel_machine;

/**
 * A virtual machine program ready to be executed.
 */
typedef struct sealevel_program sealevel_program;

/**
 * Access parameters of an account usage in an instruction.
 */
typedef struct sealevel_instruction_account {
  size_t index_in_transaction;
  size_t index_in_caller;
  bool is_signer;
  bool is_writable;
} sealevel_instruction_account;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * Creates a new Sealevel machine environment.
 */
struct sealevel_machine *sealevel_machine_new(void);

/**
 * Releases resources associated with a Sealevel machine.
 */
void sealevel_machine_free(struct sealevel_machine *machine);

/**
 * Drops an invoke context and all programs created with it.
 */
void sealevel_invoke_context_free(struct sealevel_invoke_context *this_);

/**
 * Processes a transaction instruction.
 */
void sealevel_process_instruction(struct sealevel_invoke_context *invoke_context,
                                  const char *data,
                                  size_t data_len,
                                  const struct sealevel_instruction_account *accounts,
                                  size_t accounts_len,
                                  uint64_t *compute_units_consumed);

/**
 * Loads a Sealevel program from an ELF buffer and verifies its SBF bytecode.
 */
struct sealevel_program *sealevel_program_create(const struct sealevel_machine *machine,
                                                 const struct sealevel_invoke_context *invoke_context,
                                                 const char *data,
                                                 size_t data_len);

/**
 * Compiles a program to native executable code.
 */
int sealevel_program_jit_compile(struct sealevel_program *program);

/**
 * Executes a Sealevel program with the given instruction data and accounts.
 *
 * Unlike `sealevel_process_instruction`, does not progress the transaction context state machine.
 */
uint64_t sealevel_program_execute(const struct sealevel_program *program,
                                  const struct sealevel_invoke_context *invoke_context,
                                  const char *data,
                                  size_t data_len,
                                  const struct sealevel_instruction_account *accounts,
                                  size_t accounts_len);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus
