name: docs

on:
  push:
    branches:
      - master
      - v[0-9]+.[0-9]+
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches:
      - master
      - v[0-9]+.[0-9]+

jobs:
  docs-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get commit range (push)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "COMMIT_RANGE=$GIHTUB_SHA" >> $GITHUB_ENV

      - name: Get commit range (pull_request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "COMMIT_RANGE=${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      - name: Get file status
        run: |
          set +e
          git diff --name-only $COMMIT_RANGE | grep \
            -e '.github/workflows/docs.yml' \
            -e 'docs/**'
          echo "FILE_CHANGED=$?" >> $GITHUB_ENV

      - name: Check
        id: check
        shell: bash
        run: |
          source ci/env.sh
          eval "$(ci/channel-info.sh)"
          TAG=$CI_TAG

          echo "TAG: $TAG"
          echo "CHANNEL: $CHANNEL"
          echo "FILE_CHANGED: $FILE_CHANGED"

          echo need_to_build="$(
            if [ "$TAG" != '' ]
            then
              echo 1
            elif [ $FILE_CHANGED = 0 ] || ( [ "$CHANNEL" = "beta" ] || [ "$CHANNEL" = "edge" ] )
            then
              echo 1
            else
              echo 0
            fi
          )" >> $GITHUB_OUTPUT

      - name: Setup Node
        if: ${{ steps.prebuild.outputs.need_to_build == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build
        if: ${{ steps.prebuild.outputs.need_to_build == 'true' }}
        working-directory: docs
        run: |
          npm install
          ./build.sh
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Send Slack notifiaction
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED
          color: danger
